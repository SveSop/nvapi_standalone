import "unknwn.idl";
import "d3d11.idl";


typedef enum D3D11_VK_EXTENSION {
    D3D11_VK_EXT_MULTI_DRAW_INDIRECT        = 0,
    D3D11_VK_EXT_MULTI_DRAW_INDIRECT_COUNT  = 1,
    D3D11_VK_EXT_DEPTH_BOUNDS               = 2,
    D3D11_VK_EXT_BARRIER_CONTROL            = 3,
} D3D11_VK_EXTENSION;


typedef enum D3D11_VK_BARRIER_CONTROL {
    D3D11_VK_BARRIER_CONTROL_IGNORE_WRITE_AFTER_WRITE   = 1 << 0,
} D3D11_VK_BARRIER_CONTROL;


[
    object,
    local,
    uuid(8a6e3c42-f74c-45b7-8265-a231b677ca17),
    pointer_default(unique)
]
interface ID3D11VkExtDevice : IUnknown
{
    BOOL GetExtensionSupport(
        [in] D3D11_VK_EXTENSION Extension);
}


[
    object,
    local,
    uuid(fd0bca13-5cb6-4c3a-987e-4750de2ca791),
    pointer_default(unique)
]
interface ID3D11VkExtContext : IUnknown
{
    void MultiDrawIndirect(
        [in] UINT          DrawCount,
        [in] ID3D11Buffer* pBufferForArgs,
        [in] UINT          ByteOffsetForArgs,
        [in] UINT          ByteStrideForArgs);

    void MultiDrawIndexedIndirect(
        [in] UINT          DrawCount,
        [in] ID3D11Buffer* pBufferForArgs,
        [in] UINT          ByteOffsetForArgs,
        [in] UINT          ByteStrideForArgs);

    void MultiDrawIndirectCount(
        [in] UINT          MaxDrawCount,
        [in] ID3D11Buffer* pBufferForCount,
        [in] UINT          ByteOffsetForCount,
        [in] ID3D11Buffer* pBufferForArgs,
        [in] UINT          ByteOffsetForArgs,
        [in] UINT          ByteStrideForArgs);

    void MultiDrawIndexedIndirectCount(
        [in] UINT          MaxDrawCount,
        [in] ID3D11Buffer* pBufferForCount,
        [in] UINT          ByteOffsetForCount,
        [in] ID3D11Buffer* pBufferForArgs,
        [in] UINT          ByteOffsetForArgs,
        [in] UINT          ByteStrideForArgs);

    void SetDepthBoundsTest(
        [in] BOOL          Enable,
        [in] FLOAT         MinDepthBounds,
        [in] FLOAT         MaxDepthBounds);

    void SetBarrierControl(
        [in] UINT          ControlFlags);
}
